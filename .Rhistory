unlink('1-preambule-colab_cache', recursive = TRUE)
knitr::opts_chunk$set(echo = TRUE)
bd$age.cat <- cut(bd$age, breaks=c(0, 20, 40, 60, 80, 100),
labels=c("20 ans et moins", "21 à 40", "41 à 60", "61 à 80", "81 et plus"),
ordered_result=TRUE, )
# Chargement des modules nécessaires
library(questionr)
bd$age.cat <- cut(bd$age, breaks=c(0, 20, 40, 60, 80, 100),
labels=c("20 ans et moins", "21 à 40", "41 à 60", "61 à 80", "81 et plus"),
ordered_result=TRUE, )
# Téléchargement de la base de données hdv2003 du module questionr
# (Extrait de l'enquête "Histoire de vie" de l'Insee - https://www.insee.fr/fr/statistiques/2532244)
data(hdv2003)
# Copie de la base de données dans un objet (datatable) nommé bd
bd <- hdv2003
bd$age.cat <- cut(bd$age, breaks=c(0, 20, 40, 60, 80, 100),
labels=c("20 ans et moins", "21 à 40", "41 à 60", "61 à 80", "81 et plus"),
ordered_result=TRUE, )
str(bd$age.cat)
warnings()
remotes::install_github('rstudio/rmarkdown')
plot(cars)
library(WikidataQueryServiceR) # calling of packages
install.packages("WikidataQueryServiceR")
library(WikidataQueryServiceR) # calling of packages
tablo <- query_wikidata('SELECT DISTINCT ?_udem ?_udemLabel ?field_of_work ?field_of_workLabel ?orcid ?gs_id ?researchgate_id ?academia_id WHERE {
SERVICE wikibase:label { bd:serviceParam wikibase:language "[AUTO_LANGUAGE],en". }
{?_udem wdt:P108 wd:Q392189}              # employer = UdeM
UNION                                  # OR
{ ?_udem wdt:P1416 wd:Q392189}            # affiliation = UdeM
{?_udem wdt:P101 wd:Q50637}               # field of work = histoire de l art
UNION
{ ?_udem wdt:P101 wd:Q6689}  # ou littérature fr
UNION
{ ?_udem wdt:P101 wd:Q8162} # ou linguistics
UNION
{ ?_udem wdt:P101 wd:Q309}   # history
UNION
{ ?_udem wdt:P101 wd:Q36442} # political science
UNION
{ ?_udem wdt:P101 wd:Q199655} # library science
UNION
{ ?_udem wdt:P101 wd:Q37732} # demography
UNION
{ ?_udem wdt:P101 wd:Q161733} # criminology
UNION
{ ?_udem wdt:P101 wd:Q932071} # industrial relations
UNION
{ ?_udem wdt:P101 wd:Q205398} # social work
UNION
{ ?_udem wdt:P101 wd:Q34187} # religious studies
UNION
{ ?_udem wdt:P101 wd:Q21201}  #  sociology
UNION
{ ?_udem wdt:P101 wd:Q8134} # economics
UNION
{ ?_udem wdt:P101 wd:Q5891} # philosophy
UNION
{ ?_udem wdt:P101 wd:Q208217}   # literary studies
OPTIONAL { ?_udem wdt:P101 ?field_of_work.     } # discipline
OPTIONAL { ?_udem wdt:P496 ?orcid.             } # ORCID
OPTIONAL { ?_udem wdt:P1960 ?gs_id.            } # Google Scholar ID
OPTIONAL { ?_udem wdt:P2038 ?researchgate_id.  } # ResearchGate ID
OPTIONAL { ?_udem wdt:P5715 ?academia_id.      } # Academia.edu URL
FILTER ( ?field_of_work in ( wd:Q50637,wd:Q6689,wd:Q8162,wd:Q309,wd:Q36442,wd:Q199655,wd:Q37732,wd:Q161733,wd:Q932071,wd:Q205398,wd:Q34187,wd:Q21201,wd:Q8134,wd:Q5891,wd:Q208217 ) )   # pour limiter aux disciplines/départements normalisés
}')
tablo
table(tablo)
summary(tablo)
str(tablo)
tablo$orcid
table(tablo$orcid)
freq(tablo$orcid)
library(questionr)
freq(tablo$orcid)
test <- ifelse(tablo$orcid==NA, "Manquant", "Non manquant")
str(test)
freq(test)
View(tablo)
irecode()
tablo$orcid2 <- ifelse(tablo$orcid==NA, "Manquant", "Non manquant")
tablo$orcid2[tablo$orcid == NA] <- "Manquant"
tablo$orcid2[tablo$orcid != NA] <- "Pratiquant"
View(tablo)
View(tablo)
tablo$orcid2[which(is.na(tablo$orcid))] <- "manquant"
tablo$orcid2[which(!is.na(tablo$orcid))] <- "non manquant"
table(tablo$orcid2)
pie(table)
table(tablo$orcid2)
pie(table)
tb <-table(tablo$orcid2)
pie(tb)
pie(tb,col=rainbow(7), radius=1, cex=1, main="Type d'emploi"))
pie(tb,col=rainbow(7), radius=1, cex=1, main="Type d'emploi")
slices <- c(sum(tablo$orcid==""),sum(tablo$orcid!=""))
label_orcid <- c("sans ORCID", "avec ORCID")
pie(slices, labels = label_orcid, main="Chercheurs liés à la BLSH (ORCID)")
slices <- c(sum(tablo$orcid==""),sum(tablo$orcid!=""))
label_orcid <- c("sans ORCID", "avec ORCID")
pie(slices, labels = label_orcid, main="Chercheurs liés à la BLSH (ORCID)")
pie(slices)
table(slices)
knitr::opts_chunk$set(echo = TRUE)
bd <- data.frame(age, sexe, poids)
# Créer un data frame avec 3 variables (2 vecteurs numériques et 1 vecteur textuel) avec la fonction data.frame()
age <- c(45,65,22,38,54,31,29,44,56,67)
poids <- c(150,125,210,175,110,180,130,155,190,120)
sexe <- c("H","F","F","H","H","F","F","H","F","H")
bd <- data.frame(age, sexe, poids)
bd
knitr::opts_chunk$set(echo = TRUE)
bd$age.cat <- cut(bd$age, breaks=c(0, 20, 40, 60, 80, 100),
labels=c("20 ans et moins", "21 à 40", "41 à 60", "61 à 80", "81 et plus"),
ordered_result=TRUE, )
bd$age.cat <- cut(bd$age, breaks=c(0, 20, 40, 60, 80, 100),
labels=c("20 ans et moins", "21 à 40", "41 à 60", "61 à 80", "81 et plus"),
ordered_result=TRUE)
bd$age.cat <- cut(bd$age, breaks=c(0, 20, 40, 60, 80, 100),
labels=c("20 ans et moins", "21 à 40", "41 à 60", "61 à 80", "81 et plus"),
ordered_result=TRUE))
bd$age.cat <- cut(bd$age, breaks=c(0, 20, 40, 60, 80, 100),
labels=c("20 ans et moins", "21 à 40", "41 à 60", "61 à 80", "81 et plus"),
ordered_result=TRUE)
,
# breaks=: limites des catégories.
# (peut aussi simplement indiquer le nombre de groupes (breaks=5), mais le résultat n'est pas optimal)
# (40,60]: signifie que 40 est exclu et 60 est inclu, donc 41 à 60.
# labels: intitulés.
# include.lowest=T: valeur minimale est incluse dans la première classe
# (par défaut, la borne de gauche des intervalles est ouverte).
# ordered_result=: définir une variable ordinale.
```{r}
bd$age.cat <- cut(bd$age, breaks=c(0, 20, 40, 60, 80, 100), labels=c("20 ans et moins", "21 à 40", "41 à 60", "61 à 80", "81 et plus"), ordered_result=TRUE, )
str(bd$age.cat)
bd$age.cat <- cut(bd$age, breaks=c(0, 20, 40, 60, 80, 100), labels=c("20 ans et moins", "21 à 40", "41 à 60", "61 à 80", "81 et plus"), ordered_result=TRUE)
```{r}
bd$age.cat <- cut(bd$age, breaks=c(0, 20, 40, 60, 80, 100), labels=c("20 ans et moins", "21 à 40", "41 à 60", "61 à 80", "81 et plus"), ordered_result=TRUE)
str(bd$age.cat)
knitr::opts_chunk$set(echo = TRUE)
ggplot(bd) +
geom_histogram(aes(x = age), fill="orchid1", colour = "white", binwidth = 5) +
ggtitle("Age des répondants") +
xlab("Age") +
ylab("Effectifs")
library(ggplot2)
ggplot(bd) +
geom_histogram(aes(x = age), fill="orchid1", colour = "white", binwidth = 5) +
ggtitle("Age des répondants") +
xlab("Age") +
ylab("Effectifs")
ggplot(bd) +
geom_histogram(aes(x = age), fill="orchid1", colour = "white", binwidth = 5) +
ggtitle("Age des répondants") +
xlab("Age") +
ylab("Effectifs")
```{r}
ggplot(bd) +
geom_histogram(aes(x = age))
ggplot(bd) +
geom_histogram(aes(x = age), fill="orchid1", colour = "white", breaks = c(0, 20, 40, 60, 80, 100)) +
facet_grid(~sexe) +
ylab("Effectifs")
knitr::opts_chunk$set(echo = TRUE)
# Chargement des modules nécessaires
library(questionr)
library(ggplot2)
# Ajouter la fonction de téléchargement si nécessaire:
# install.packages("questionr", dependencies=TRUE)
# install.packages("car", dependencies=TRUE)
# install.packages("ggplot2", dependencies=TRUE)
#
# Téléchargement de la base de données hdv2003 du module questionr
# (Extrait de l'enquête "Histoire de vie" de l'Insee - https://www.insee.fr/fr/statistiques/2532244)
data(hdv2003)
# Copie de la base de données dans un objet (datatable) nommé bd
bd <- hdv2003
ggplot(bd) +
geom_histogram(aes(x = age))
ggplot(bd) +
geom_histogram(aes(x = age), fill="orchid1", colour = "white", binwidth = 5) +
ggtitle("Age des répondants") +
xlab("Age") +
ylab("Effectifs")
ggplot(bd) +
geom_histogram(aes(x = age), fill="orchid1", colour = "white", breaks = c(0, 20, 40, 60, 80, 100)) +
ggtitle("Age des répondants") +   # titre du graphique
xlab("Age") +                     # titre axe x
ylab("Effectifs")                 # titre axe y
facet_grid(~sexe) +               # variable de groupes
facet_grid(~sexe) +               # variable de groupes
ggplot(bd) +
geom_histogram(aes(x = age), fill="orchid1", colour = "white", breaks = c(0, 20, 40, 60, 80, 100)) +
ggtitle("Age des répondants") +   # titre du graphique
xlab("Age") +                     # titre axe x
ylab("Effectifs") +               # titre axe y
facet_grid(~sexe)                 # variable de groupes
ggplot(bd) +
geom_histogram(aes(x = age), fill="orchid1", colour = "white", breaks = c(0, 20, 40, 60, 80, 100)) +
ggtitle("Age des répondants") +   # titre du graphique
xlab("Age") +                     # titre axe x
facet_grid(~sexe)                 # variable de groupes
ggplot(bd) +
geom_histogram(aes(x = age), fill="orchid1", colour = "white", breaks = c(0, 20, 40, 60, 80, 100)) +  # breaks= limites des catégories d'âge
ggtitle("Age des répondants") +   # titre du graphique
xlab("Age") +                     # titre axe x
facet_grid(~sexe)                 # variable de groupes
ggplot(bd) +
geom_bar(aes(x = trav.satisf), fill = "thistle3", width = .7) +
xlab("Satisfaction") +
ylab("Effectifs") +
ggtitle("Satisfaction au travail")
ggplot(bd) +
geom_bar(aes(x = occup, fill = sexe))                     # position = "stack" par défaut des effectifs
ggplot(bd) +
geom_bar(aes(x = occup, fill = sexe), position = "dodge") # position = "dodge" pour effectifs côte à côte
ggplot(bd) +
geom_bar(aes(x = occup, fill = sexe), position = "fill")  # position = "fill" pour représenter les proportions
ggplot(bd) +
geom_point(aes(x = age, y = freres.soeurs, color = sexe), size=3, pch=19) +
scale_color_brewer("sexe", palette = "Accent") +
theme(legend.position = "bottom", legend.box = "vertical")
ggplot(bd) +
geom_point(aes(x = age, y = freres.soeurs, color = sexe), size=3, pch=19) +
scale_color_brewer("sexe", palette = "Accent") +
theme(legend.position = "bottom", legend.box = "vertical")
?theme
ggplot(bd) +
geom_point(aes(x = age, y = freres.soeurs, color = sexe), size=3, pch=19) +
scale_color_brewer("sexe", palette = "Accent") +
theme_void
ggplot(bd) +
geom_point(aes(x = age, y = freres.soeurs, color = sexe), size=3, pch=19) +
scale_color_brewer("sexe", palette = "Accent") +
theme_void()
ggplot(bd) +
geom_point(aes(x = age, y = freres.soeurs, color = sexe), size=3, pch=19) +
scale_color_brewer("sexe", palette = "Accent") +
theme_classic()
ggplot(bd) +
geom_point(aes(x = age, y = freres.soeurs, color = sexe), size=3, pch=19) +
scale_color_brewer("sexe", palette = "Accent") +
theme_dark()
ggplot(bd, aes(x=age, y=freres.soeurs))+
geom_point(col="steelblue2")+
geom_smooth(method="lm", col="thistle3")+ # droite de régression + couleur
geom_density2d(color = "orange") +        # ligne de densité
scale_x_log10()
ggplot(bd) +                  # objet bd
geom_histogram(aes(x = age))  # histogramme de la variable age
ggplot(bd, aes(x = age)) +                  # objet bd
geom_histogram()  # histogramme de la variable age
ggplot(bd) +                  # objet bd
geom_histogram() + # histogramme de la variable age
aes(x = age)
ggplot(bd) +
geom_histogram(fill="orchid1", colour = "white", binwidth = 5) +  # arguments de couleurs et largeur des barres
ggtitle("Age des répondants") +   # titre du graphique
aes(x = age) +
xlab("Age") +                     # titre axe x
ylab("Effectifs")                 # titre axe y
ggplot(bd) +
geom_boxplot(aes(x = trav.satisf, y =age), varwidth = TRUE, fill = "midnightblue", color = "chartreuse1") +
ggtitle("Pratique de la religion")
ggplot(bd, aes(x = age, color = sexe, fill=sexe)) + geom_density(alpha=0.55)
setwd("~/Nouveau dossier")
setwd("~/covid-reproductibilite/Rcolab")
create_theme(name = "theme")
install.packages("remotes")
library(remotes)
install_github("rstudio/distill")
tablo <- query_wikidata('SELECT DISTINCT ?_udem ?_udemLabel ?field_of_work ?field_of_workLabel ?orcid ?gs_id ?researchgate_id ?academia_id ?genderLabel WHERE {
SERVICE wikibase:label { bd:serviceParam wikibase:language "[AUTO_LANGUAGE],en". }
{?_udem wdt:P108 wd:Q392189}              # employer = UdeM
UNION                                  # OR
{ ?_udem wdt:P1416 wd:Q392189}            # affiliation = UdeM
{?_udem wdt:P101 wd:Q50637}               # field of work = histoire de l art
UNION
{ ?_udem wdt:P101 wd:Q6689}  # ou littérature fr
UNION
{ ?_udem wdt:P101 wd:Q8162} # ou linguistics
UNION
{ ?_udem wdt:P101 wd:Q309}   # history
UNION
{ ?_udem wdt:P101 wd:Q36442} # political science
UNION
{ ?_udem wdt:P101 wd:Q199655} # library science
UNION
{ ?_udem wdt:P101 wd:Q37732} # demography
UNION
{ ?_udem wdt:P101 wd:Q161733} # criminology
UNION
{ ?_udem wdt:P101 wd:Q932071} # industrial relations
UNION
{ ?_udem wdt:P101 wd:Q205398} # social work
UNION
{ ?_udem wdt:P101 wd:Q34187} # religious studies
UNION
{ ?_udem wdt:P101 wd:Q21201}  #  sociology
UNION
{ ?_udem wdt:P101 wd:Q8134} # economics
UNION
{ ?_udem wdt:P101 wd:Q5891} # philosophy
UNION
{ ?_udem wdt:P101 wd:Q208217}   # literary studies
OPTIONAL { ?_udem wdt:P101 ?field_of_work.     } # discipline
OPTIONAL { ?_udem wdt:P496 ?orcid.             } # ORCID
OPTIONAL { ?_udem wdt:P1960 ?gs_id.            } # Google Scholar ID
OPTIONAL { ?_udem wdt:P2038 ?researchgate_id.  } # ResearchGate ID
OPTIONAL { ?_udem wdt:P5715 ?academia_id.      } # Academia.edu URL
OPTIONAL { ?_udem wdt:P21 ?gender.      } # male or female
FILTER ( ?field_of_work in ( wd:Q23404,wd:Q50637,wd:Q6689,wd:Q8162,wd:Q309,wd:Q36442,wd:Q199655,wd:Q37732,wd:Q161733,wd:Q932071,wd:Q205398,wd:Q34187,wd:Q21201,wd:Q8134,wd:Q5891,wd:Q208217 ) )   # pour limiter aux disciplines/départements normalisés
}')
library(WikidataQueryServiceR)
ggplot(tablo) +
geom_bar(aes(x = Field_of_work), fill = "thistle3", width = .7)
library(ggplot2)
ggplot(tablo) +
geom_bar(aes(x = Field_of_work), fill = "thistle3", width = .7)
tablo <- query_wikidata('SELECT DISTINCT ?_udem ?_udemLabel ?field_of_work ?field_of_workLabel ?orcid ?gs_id ?researchgate_id ?academia_id ?genderLabel WHERE {
SERVICE wikibase:label { bd:serviceParam wikibase:language "[AUTO_LANGUAGE],en". }
{?_udem wdt:P108 wd:Q392189}              # employer = UdeM
UNION                                  # OR
{ ?_udem wdt:P1416 wd:Q392189}            # affiliation = UdeM
{?_udem wdt:P101 wd:Q50637}               # field of work = histoire de l art
UNION
{ ?_udem wdt:P101 wd:Q6689}  # ou littérature fr
UNION
{ ?_udem wdt:P101 wd:Q8162} # ou linguistics
UNION
{ ?_udem wdt:P101 wd:Q309}   # history
UNION
{ ?_udem wdt:P101 wd:Q36442} # political science
UNION
{ ?_udem wdt:P101 wd:Q199655} # library science
UNION
{ ?_udem wdt:P101 wd:Q37732} # demography
UNION
{ ?_udem wdt:P101 wd:Q161733} # criminology
UNION
{ ?_udem wdt:P101 wd:Q932071} # industrial relations
UNION
{ ?_udem wdt:P101 wd:Q205398} # social work
UNION
{ ?_udem wdt:P101 wd:Q34187} # religious studies
UNION
{ ?_udem wdt:P101 wd:Q21201}  #  sociology
UNION
{ ?_udem wdt:P101 wd:Q8134} # economics
UNION
{ ?_udem wdt:P101 wd:Q5891} # philosophy
UNION
{ ?_udem wdt:P101 wd:Q208217}   # literary studies
OPTIONAL { ?_udem wdt:P101 ?field_of_work.     } # discipline
OPTIONAL { ?_udem wdt:P496 ?orcid.             } # ORCID
OPTIONAL { ?_udem wdt:P1960 ?gs_id.            } # Google Scholar ID
OPTIONAL { ?_udem wdt:P2038 ?researchgate_id.  } # ResearchGate ID
OPTIONAL { ?_udem wdt:P5715 ?academia_id.      } # Academia.edu URL
OPTIONAL { ?_udem wdt:P21 ?gender.      } # male or female
FILTER ( ?field_of_work in ( wd:Q23404,wd:Q50637,wd:Q6689,wd:Q8162,wd:Q309,wd:Q36442,wd:Q199655,wd:Q37732,wd:Q161733,wd:Q932071,wd:Q205398,wd:Q34187,wd:Q21201,wd:Q8134,wd:Q5891,wd:Q208217 ) )   # pour limiter aux disciplines/départements normalisés
}')
ggplot(tablo) +
geom_bar(aes(x = Field_of_work), fill = "thistle3", width = .7)
View(tablo)
ggplot(tablo) +
geom_bar(aes(x = field_of_workLabel), fill = "thistle3", width = .7)
ggplot(tablo) +
geom_bar(aes(x = field_of_workLabel), width = .7, las=2)
tb.eff <- table(tablo$field_of_workLabel) # tableau d'effectifs
tb.eff <- table(tablo$field_of_workLabel) # tableau d'effectifs
barplot(tb.eff, beside = TRUE,  las=2, legend = levels(tablo$field_of_workLabel))
barplot(tb.eff, beside = TRUE,  las=2, ylim=c(0, 50), legend = levels(tablo$field_of_workLabel))
ggplot(tablo) +
geom_bar(aes(x = field_of_workLabel), fill = "thistle3", width = .7) +
xlab("Domaines") +
ylab("Effectifs") +
ggtitle("Domaines")
ggplot(tablo) +
geom_bar(aes(x = field_of_workLabel), fill = "thistle3", width = .10) +
xlab("Domaines") +
ylab("Effectifs") +
ggtitle("Domaines")
ggplot(tablo) +
geom_bar(aes(x = field_of_workLabel), fill = "thistle3", width = .5) +
xlab("Domaines") +
ylab("Effectifs") +
ggtitle("Domaines")
ggplot(tablo) +
geom_bar(aes(x = field_of_workLabel), fill = "thistle3", width = .3) +
xlab("Domaines") +
ylab("Effectifs") +
ggtitle("Domaines")
ggplot(tablo) +
geom_bar(aes(x = field_of_workLabel), fill = "thistle3", width = .7) +
xlab("Domaines") +
ylab("Effectifs") +
ggtitle("Domaines")
theme(axis.text.x = element_text(angle = 90))
theme(axis.text.x = field_of_workLabel(angle = 90))
theme(field_of_workLabel = element_text(angle = 90))
ggplot(tablo) +
geom_bar(aes(x = field_of_workLabel), fill = "thistle3", width = .7) +
xlab("Domaines") +
ylab("Effectifs") +
ggtitle("Domaines") +
theme(field_of_workLabel = element_text(angle = 90))
ggplot(tablo) +
geom_bar(aes(x = field_of_workLabel), fill = "thistle3", width = .7) +
xlab("Domaines") +
ylab("Effectifs") +
ggtitle("Domaines") +
theme(axis.text.x = element_text(angle = 90))
?(theme)
?theme
ggplot(tablo) +
geom_bar(aes(x = field_of_workLabel), fill = "thistle3", width = .7) +
xlab("Domaines") +
ylab("Effectifs") +
ggtitle("Domaines") +
theme_grey +
theme(axis.text.x = element_text(angle = 90))
ggplot(tablo) +
geom_bar(aes(x = field_of_workLabel), fill = "thistle3", width = .7) +
xlab("Domaines") +
ylab("Effectifs") +
ggtitle("Domaines") +
theme_grey() +
theme(axis.text.x = element_text(angle = 90))
ggplot(tablo) +
geom_bar(aes(x = field_of_workLabel), fill = "thistle3", width = .7) +
xlab("Domaines") +
ylab("Effectifs") +
ggtitle("Domaines") +
theme_gray() +
theme(axis.text.x = element_text(angle = 90))
ggplot(tablo) +
geom_bar(aes(x = field_of_workLabel)) +
xlab("Domaines") +
ylab("Effectifs") +
ggtitle("Domaines") +
theme_gray() +
theme(axis.text.x = element_text(angle = 90))
ggplot(tablo) +
geom_bar(aes(x = field_of_workLabel)) +
xlab("Domaines") +
ylab("Effectifs") +
ggtitle("Domaines") +
theme_light() +
theme(axis.text.x = element_text(angle = 90))
theme_dark(() +
ggplot(tablo) +
geom_bar(aes(x = field_of_workLabel)) +
xlab("Domaines") +
ylab("Effectifs") +
ggtitle("Domaines") +
theme_dark() +
theme(axis.text.x = element_text(angle = 90))
ggplot(tablo) +
geom_bar(aes(x = field_of_workLabel), fill = "thistle3", width = .7) +
xlab("Domaines") +
ylab("Effectifs") +
ggtitle("Domaines") +
theme_dark() +
theme(axis.text.x = element_text(angle = 90))
ggplot(tablo) +
geom_bar(aes(x = field_of_workLabel), fill = "thistle3", width = .7) +
xlab("Domaines") +
ylab("Effectifs") +
ggtitle("Domaines") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90))
ggplot(tablo) +
geom_bar(aes(x = field_of_workLabel), fill = "thistle3", width = .7) +
xlab("Domaines") +
ylab("Effectifs") +
ggtitle("Domaines") +
theme_classic() +
theme(axis.text.x = element_text(angle = 90))
